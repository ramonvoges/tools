#!/usr/bin/env ruby
#
# Parst die TEI/XML-Datei von Textgrid mit sämtlichen Gedichten von Arndt
# und erzeugt für jedes Gedicht eine einzelne Datei. Benannt ist die Datei
# nach dem Schema "<Jahr> <Titel>.txt". Falls kein Jahr angegeben ist, wird
# "Ohne Jahr" ergänzt. Haben mehrere Gedichte den gleichen Titel, werden sie
# konkateniert.
#
# Als Argument benötigt das Programm die TEI/XML-Datei mit den Gedichten, z.B.
# "Arndt_Gedichte.xml": ~> ./xml2txt Arnd_Gedichte.xml
# Vorher noch: ~> chmod +x xml2txt, um die Datei ausführbar zu machen.
#
# Version 0.1
#
# Ramon Voges
#

# gem install nokogiri, falls nicht vorhanden
require 'nokogiri'

# Erstes Argument muss Dateiname sein
filename = ARGV.shift

# Verwendet Nokogiri und lädt die angegebene Datei
doc = Nokogiri::XML(File.open(filename))

# Struct als Bauanleitung für die Gedichte
Gedicht = Struct.new(:title, :year, :stanzas)

# Durchsucht das Dokument nach den Gedichten
doc.css("text body div div").each do |g|
  stanzas = String.new
  gedicht = Gedicht.new
  # Zu jedem Gedicht wird ein Struct geschaffen
  g.children.each do |child|
    gedicht.title = child.text.strip if child.name == "head"
    gedicht.year = child.text.strip if child.name == "p"
    stanzas << child.text.gsub("                                 ", "") if child.name == "lg"
  end
  gedicht.stanzas = stanzas
  # Stellt sicher, dass eine Jahresangabe vorliegt
  gedicht.year ||= "Ohne Jahr"
  # Schreibt die Dateien
  File.open("#{gedicht.year.gsub(".", "")} #{gedicht.title.gsub(".", "")}.txt", "a") do |f|
    f.puts gedicht.title
    f.puts gedicht.year
    f.puts gedicht.stanzas
  end
end
